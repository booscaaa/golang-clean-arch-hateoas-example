basePath: /
definitions:
  domain.Item:
    properties:
      date:
        example: "2021-02-02"
        type: string
      description:
        example: Descrição da tarefa 1
        type: string
      initials:
        example: vin
        maxLength: 3
        type: string
      name:
        example: Tarefa 1
        type: string
    type: object
host: todo-list-hateoas.herokuapp.com
info:
  contact:
    email: boscardinvinicius@gmail.com
    name: Vinícius Boscardin
  description: An application of studies on the implementation of clean architecture
    with golang with a plus of REST level 3 implementations
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: todo-list-hateoas.herokuapp.com
  title: Clean architecture and Level 3 of REST
  version: 2021.12.5.0
paths:
  /item:
    get:
      consumes:
      - application/json
      description: Fetch items by initials
      parameters:
      - description: vnb
        in: query
        name: initials
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Item'
      security:
      - ApiKeyAuth: []
      summary: Fetch items by initials
      tags:
      - item
    post:
      consumes:
      - application/json
      description: Create new item
      parameters:
      - description: item
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/domain.Item'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Item'
      security:
      - ApiKeyAuth: []
      summary: Create new item
      tags:
      - item
  /item/{id}:
    delete:
      consumes:
      - application/json
      description: Delete item by id
      parameters:
      - description: "1"
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Item'
      security:
      - ApiKeyAuth: []
      summary: Delete item by id
      tags:
      - item
    get:
      consumes:
      - application/json
      description: Get item by id
      parameters:
      - description: "1"
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Item'
      security:
      - ApiKeyAuth: []
      summary: Get item by id
      tags:
      - item
    put:
      consumes:
      - application/json
      description: Update item by id
      parameters:
      - description: item
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/domain.Item'
      - description: "1"
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Item'
      security:
      - ApiKeyAuth: []
      summary: Update item by id
      tags:
      - item
swagger: "2.0"
